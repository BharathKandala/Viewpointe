---
- name: Verify the nodeagent is running or not
  ignore_errors: true
  ansible.builtin.shell: |
    ps -p $(cat "{{ was_nodeagent_sync__was_install_location }}"/profiles/"{{ was_nodeagent_sync__node_profile_name }}"/logs/nodeagent/nodeagent.pid) > /dev/null
  register: nodeagent_is_running
  changed_when: nodeagent_is_running.rc == 0
  failed_when: false

- name: Print the msg
  ansible.builtin.debug:
    msg: " Node agent is not running"
  when: nodeagent_is_running.rc != 0

- name: Print the msg
  ansible.builtin.debug:
    msg: "Node agent is running "
  when: nodeagent_is_running.rc == 0

- name: "Stop Node Agent if it's running"
  when: nodeagent_is_running.rc == 0
  ansible.builtin.command: "{{ was_nodeagent_sync__was_install_location }}/profiles/{{ was_nodeagent_sync__node_profile_name }}/bin/stopNode.sh -username {{ was_username }} -password {{ was_password }}"
  register: nodeagent_stop
  changed_when: nodeagent_stop.rc == 0
  failed_when: nodeagent_stop.rc != 0

- name: Verify the nodeagent is running or not
  ignore_errors: true
  ansible.builtin.shell: |
    ps -p $(cat "{{ was_nodeagent_sync__was_install_location }}"/profiles/"{{ was_nodeagent_sync__node_profile_name }}"/logs/nodeagent/nodeagent.pid) > /dev/null
  register: nodeagent_is_stop
  changed_when: nodeagent_is_stop.rc == 0
  failed_when: false

- name: Print the msg
  ansible.builtin.debug:
    msg: " Node agent is stopped successfully "
  when: nodeagent_is_stop.rc != 0

######################
- name: Verify the dmgr Running or not
  ignore_errors: true
  ansible.builtin.shell: |
    ps -p $(cat "{{ was_nodeagent_sync__was_install_location }}"/profiles/"{{ was_nodeagent_sync__dmgr_profile_name }}"/logs/dmgr/dmgr.pid) > /dev/null
  register: dmgr_is_running
  changed_when: dmgr_is_running.rc == 0

- name: Print the msg
  ansible.builtin.debug:
    msg: " DMGR is not running "
  when: dmgr_is_running.rc != 0

- name: Print the msg
  ansible.builtin.debug:
    msg: " DMGR is running "
  when: dmgr_is_running.rc == 0

- name: "Start Dmgr"
  ansible.builtin.command: "{{ was_nodeagent_sync__was_install_location }}/profiles/{{ was_nodeagent_sync__dmgr_profile_name }}/bin/startManager.sh -username {{ was_username }} -password {{ was_password }}"
  register: dmgr_start
  changed_when: dmgr_start.rc == 0
  failed_when: dmgr_start.rc != 0
  when: dmgr_is_running.rc != 0

- name: Verify the dmgr Running or not
  ignore_errors: true
  ansible.builtin.shell: |
    ps -p $(cat "{{ was_nodeagent_sync__was_install_location }}"/profiles/"{{ was_nodeagent_sync__dmgr_profile_name }}"/logs/dmgr/dmgr.pid) > /dev/null
  register: dmgr_is_running_after
  changed_when: dmgr_is_running_after.rc == 0
  failed_when: false

- name: Print the msg
  ansible.builtin.debug:
    msg: " DMGR is started successfully "
  when: dmgr_is_running_after.rc == 0

# - name: Wait 60 seconds for DMGR to activate
#   ansible.builtin.pause:
#     seconds: 60
#   when: dmgr_is_running_after.rc == 0

##################
- name: "Synchronize the nodes"
  when: nodeagent_is_stop.rc != 0 and dmgr_is_running.rc == 0
  ansible.builtin.command: "{{ was_nodeagent_sync__was_install_location }}/profiles/{{ was_nodeagent_sync__node_profile_name }}/bin/syncNode.sh {{ was_nodeagent_sync__node_profile_name }} {{ was_nodeagent_port }} -username {{ was_username }} -password {{ was_password }}"
  register: nodeagent_sync
  changed_when: nodeagent_sync.rc == 0

- name: Print the msg
  ansible.builtin.debug:
    msg: " All nodes are Synchronize"
  when: nodeagent_is_stop.rc != 0 and dmgr_is_running.rc == 0
