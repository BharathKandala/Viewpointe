---
- name: Printing the nodeganet profile name
  ansible.builtin.debug:
    msg: "{{ nodeagent_profile_name | default(inventory_hostname_short) }}"

- name: Verify the nodeagent is running or not
  ignore_errors: true
  ansible.builtin.shell: |
    ps -p $(cat "{{ was_nodeagent_stop__was_install_location }}"/profiles/"{{ was_nodeagent_stop__node_profile_name }}"/logs/nodeagent/nodeagent.pid) > /dev/null
  register: nodeagent_is_running
  changed_when: nodeagent_is_running.rc == 0
  failed_when: false

- name: Print the msg
  ansible.builtin.debug:
    msg: " Node agent is not running "
  when: nodeagent_is_running.rc != 0

- name: Print the msg
  ansible.builtin.debug:
    msg: " Node agent is running "
  when: nodeagent_is_running.rc == 0

- name: "Stop Node Agent if it's running"
  when: nodeagent_is_running.rc == 0
  ansible.builtin.command: "{{ was_nodeagent_stop__was_install_location }}/profiles/{{ was_nodeagent_stop__node_profile_name }}/bin/stopNode.sh -username {{ was_username }} -password {{ was_password }}"
  register: nodeagent_stop
  changed_when: nodeagent_stop.rc == 0
  failed_when: nodeagent_stop.rc != 0

- name: Verify the nodeagent is running or not after
  ignore_errors: true
  ansible.builtin.shell: |
    ps -p $(cat "{{ was_nodeagent_stop__was_install_location }}"/profiles/"{{ was_nodeagent_stop__node_profile_name }}"/logs/nodeagent/nodeagent.pid) > /dev/null
  register: nodeagent_is_running_after
  changed_when: nodeagent_is_running_after.rc == 0
  failed_when: false

- name: Print the msg
  ansible.builtin.debug:
    msg: " Node agent is stopped successfully "
  when: nodeagent_is_running_after.rc != 0
